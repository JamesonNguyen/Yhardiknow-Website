{"version":3,"sources":["constants/index.ts","hooks/useBreakpoints.tsx","components/Banner.tsx","components/EpisodeCard.tsx","constants/sampleData.ts","components/Player.tsx","components/App.tsx","index.tsx"],"names":["breakpoints","config","darkMode","backgroundColor","useBreakpoints","isDesktopOrLaptop","useMediaQuery","query","isBigScreen","isTabletOrMobile","isMobile","isTablet","isPortrait","isRetina","NameDiv","styled","div","StyledContainer","header","PortraitContainer","StyledPortrait","img","StyledTextDiv","section","StyledHeader","p","StyledText","StyledName","StyledImageContainer","Banner","src","process","CoverDiv","PlayIcon","StyledEpisodeImage","Card","PlayDiv","InfoDiv","Description","Date","Title","ExpandButton","ChevronDiv","EpisodeCard","episodeName","description","imageUrl","audioUrl","date","setSelectedEp","useState","isExpanded","setIsExpanded","className","onClick","alt","data","PlayerContainer","StyledDiv","ProgressDiv","ControlBar","PlayerIcon","VolumeContainer","VolumeIcon","VolumeSlider","input","ProgressBar","state","progress","DurationText","fade","keyframes","LoadingText","formatTimers","time","minutes","Math","floor","seconds","Player","episode","Audio","AudioObject","setAudioObject","isHidden","setIsHidden","isPlaying","setIsPlaying","currentTime","setCurrentTime","endTime","setEndTime","currentProgress","setCurrentProgress","canPlay","setCanPlay","addEventListener","duration","useEffect","pause","console","log","readyState","networkState","style","display","alignItems","gap","marginLeft","play","type","min","max","onChange","e","volume","Number","currentTarget","value","event","preventDefault","bounds","getBoundingClientRect","newProgress","clientX","left","right","StyledBody","Cards","App","selectedEp","map","info","key","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gTAAaA,EAGA,SAHAA,EAIA,QASEC,EALA,CACbC,UAAU,EACVC,gBAAiB,CAAC,UAAW,Y,OCoBhBC,EA5BQ,WACnB,IAAMC,EAAoBC,wBAAc,CACpCC,MAAO,wBAELC,EAAcF,wBAAc,CAAEC,MAAO,wBACrCE,EAAmBH,wBAAc,CACnCC,MAAO,wBAELG,EAAWJ,wBAAc,CAC3BC,MAAO,uBAQX,MAAO,CACHF,oBACAG,cACAC,mBACAE,SAVaL,wBAAc,CAC3BC,MAAO,+CAUPK,WAReN,wBAAc,CAAEC,MAAO,4BAStCM,SARaP,wBAAc,CAAEC,MAAO,4BASpCG,a,QCrBFI,GAAUC,IAAOC,IAAV,wNAYPC,GAAkBF,IAAOG,OAAV,+RASElB,EAIXc,IAINK,GAAoBJ,IAAOC,IAAV,uEAKjBI,GAAiBL,IAAOM,IAAV,oGAOdC,GAAgBP,IAAOQ,QAAV,uQAebC,GAAeT,IAAOU,EAAV,0dAQKzB,EAUAA,GAMjB0B,GAAaX,IAAOU,EAAV,kXAOOzB,EAOAA,GAMjB2B,GAAaZ,IAAOU,EAAV,+OAKOzB,EAIAA,GAKjB4B,GAAuBb,IAAOC,IAAV,oGAgDXa,GA1CA,WAAO,IAAD,EAC+BzB,IAA1CC,EADW,EACXA,kBAAmBK,EADR,EACQA,SAAUC,EADlB,EACkBA,SACrC,OACE,gBAACM,GAAD,YACIZ,GAAqBM,IACrB,gBAACW,GAAD,WACE,eAACE,GAAD,yBACA,eAACE,GAAD,+CAGHhB,GAAY,eAACc,GAAD,yBACb,gBAACI,GAAD,WACE,gBAACT,GAAD,WACE,eAACC,GAAD,CACEU,IAAG,UAAKC,sBAAL,iCAEL,eAACjB,GAAD,UACE,eAACa,GAAD,4CAGJ,gBAACR,GAAD,WACE,eAACC,GAAD,CACEU,IAAG,UAAKC,sBAAL,8BAEL,eAACjB,GAAD,UACE,eAACa,GAAD,yCAGJ,gBAACR,GAAD,WACE,eAACC,GAAD,CACEU,IAAG,UAAKC,sBAAL,gCAEL,eAACjB,GAAD,UACE,eAACa,GAAD,2CAILjB,GAAY,eAACgB,GAAD,gDC3JbM,GAAWjB,IAAOC,IAAV,oRASShB,GAMjBiC,GAAWlB,IAAOM,IAAV,sJAGSrB,GAMjBkC,GAAqBnB,IAAOM,IAAV,+OAKDrB,EAIAA,GAKjBmC,GAAOpB,IAAOC,IAAV,6hBAQahB,EAIAA,EACTkC,GAGAD,GAGAD,IAYRI,GAAUrB,IAAOC,IAAV,gMAYPqB,GAAUtB,IAAOC,IAAV,gQAQUhB,GAKjBsC,GAAcvB,IAAOU,EAAV,2VAQMzB,EAKAA,GAMjBuC,GAAOxB,IAAOU,EAAV,sNAIazB,EAIAA,GAKjBwC,GAAQzB,IAAOU,EAAV,6PAMYzB,EAGAA,GAKjByC,GAAe1B,IAAOM,IAAV,mQAIKrB,EAKAA,GAOjB0C,GAAa3B,IAAOC,IAAV,2JA6DD2B,GA/CiC,SAAC,GAO1C,IANLC,EAMI,EANJA,YACAC,EAKI,EALJA,YACAC,EAII,EAJJA,SACAC,EAGI,EAHJA,SACAC,EAEI,EAFJA,KACAC,EACI,EADJA,cACI,EACgCC,oBAAkB,GADlD,mBACGC,EADH,KACeC,EADf,KAEJ,OACE,gBAACjB,GAAD,CAAMkB,UAAWF,EAAa,OAAS,GAAvC,UACE,gBAACnB,GAAD,CACEsB,QAAS,WACPL,EAAc,CAAEL,cAAaC,cAAaC,WAAUC,WAAUC,UAFlE,UAKE,eAACd,GAAD,CACEJ,IAAG,UAAKC,sBAAL,4BAA+Ce,KAEpD,eAACV,GAAD,UACE,eAACH,GAAD,CACEH,IAAG,UAAKC,sBAAL,0BACHwB,IAAI,cAKV,gBAAClB,GAAD,WACE,eAACG,GAAD,UAAQI,IACR,eAAC,GAAD,UAAOI,IACP,eAACV,GAAD,UAAcO,OAEhB,eAACH,GAAD,CACEY,QAAS,WACPF,GAAeD,IAFnB,SAKE,eAACV,GAAD,CACEX,IAAG,UAAKC,sBAAL,kBACAoB,EAA8B,aAAjB,eADb,gBCtLEK,GA/Bc,CAC3B,CAEET,SAAS,kFACTF,YACE,uLACFD,YAAa,gBACbI,KAAM,2BACNF,SAAU,YAEZ,CAEEC,SAAS,kFACTF,YACE,8LACFD,YAAa,sBACbI,KAAM,4BACNF,SAAU,YAEZ,CAEEC,SACE,kFACFF,YACE,0XACFD,YAAa,iBACbI,KAAM,uBACNF,SAAU,aCpBRW,GAAkB1C,IAAOC,IAAV,gZAcEhB,GAQjB0D,GAAY3C,IAAOC,IAAV,gNAWTyB,GAAe1B,IAAOM,IAAV,mQAIKrB,EAKAA,GAOjB0C,GAAa3B,IAAOC,IAAV,mKAUVwB,GAAQzB,IAAOU,EAAV,kNAIYzB,EAGAA,GAIjB2D,GAAc5C,IAAOC,IAAV,kHAOX4C,GAAa7C,IAAOC,IAAV,yHAOV6C,GAAa9C,IAAOM,IAAV,0MAGOrB,EAIAA,GAMjB8D,GAAkB/C,IAAOC,IAAV,2JASf+C,GAAahD,IAAOM,IAAV,0MAGOrB,EAIAA,GAMjBgE,GAAejD,IAAOkD,MAAV,2CAIZC,GAAcnD,IAAOC,IAAV,2PASH,SAACmD,GAAD,OAAWA,EAAMC,YACpB,SAACD,GAAD,OAAWA,EAAMC,YAKtBC,GAAetD,IAAOU,EAAV,oOAKKzB,EAGAA,GAIjBsE,GAAOC,YAAH,sHAWJC,GAAczD,IAAOU,EAAV,gHACF6C,IAKTG,GAAe,SAACC,GACpB,IAAMC,EAAUC,KAAKC,MAAMH,EAAO,IAC5BI,EAAUF,KAAKC,MAAMH,EAAO,IAClC,MAAM,GAAN,OAAUC,EAAV,YAAqBG,EAAU,GAAK,IAAM,IAA1C,OAA+CA,IAgHlCC,GA7GsB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QAAc,EACd9B,mBACpC,IAAI+B,MAAMD,EAAQjC,WAFgC,mBAC7CmC,EAD6C,KAChCC,EADgC,OAIpBjC,oBAAkB,GAJE,mBAI7CkC,EAJ6C,KAInCC,EAJmC,OAKlBnC,oBAAkB,GALA,mBAK7CoC,EAL6C,KAKlCC,EALkC,OAMdrC,mBAAiB,GANH,mBAM7CsC,EAN6C,KAMhCC,EANgC,OAOtBvC,mBAAiB,GAPK,mBAO7CwC,EAP6C,KAOpCC,EAPoC,OAQNzC,mBAAiB,GARX,mBAQ7C0C,EAR6C,KAQ5BC,EAR4B,OAStB3C,oBAAkB,GATI,mBAS7C4C,EAT6C,KASpCC,EAToC,KAkBpDb,EAAYc,iBAAiB,cAAc,WACzCP,EAAeP,EAAYM,aAC3BG,EAAWT,EAAYe,UACvBJ,EAAoBX,EAAYM,YAAcN,EAAYe,SAAY,QAGxEC,qBAAU,WACRhB,EAAYiB,QACZhB,EAAe,IAAIF,MAAMD,EAAQjC,WACjC0C,EAAe,GACfI,EAAmB,GACnBF,EAAW,GACXJ,GAAa,KAEZ,CAACP,IAEJkB,qBAAU,WACRE,QAAQC,IAAInB,EAAYoB,WAAYpB,EAAYqB,cAC5CrB,EAAYoB,WAAa,GAAkC,IAA7BpB,EAAYqB,aAC5CR,GAAW,GAEXA,GAAW,KAEZ,CAACb,EAAYoB,WAAYpB,EAAYqB,eAYxC,OACE,gBAAC9C,GAAD,CAAiBJ,UAAW+B,EAAW,SAAW,GAAlD,UACE,gBAAC1B,GAAD,YACI0B,GACA,gBAACxB,GAAD,WACE,uBACE4C,MAAO,CACLC,QAAS,OACTC,WAAY,SACZC,IAAK,SACLC,WAAY,UALhB,UAQE,eAAC/C,GAAD,CACE/B,IAAG,UAAKC,sBAAL,kBACDuD,EAAY,QAAU,cADrB,QAGHhC,QA5DD,WACXiC,GAAcD,GACVA,EACFJ,EAAYiB,QAEZjB,EAAY2B,UAyDJ,eAAC,GAAD,UAAQ7B,EAAQpC,iBAEjB0C,IAAcQ,GAAW,eAACtB,GAAD,4BAC1B,gBAACV,GAAD,WACE,eAACC,GAAD,CAAYjC,IAAG,UAAKC,sBAAL,uBACf,eAACiC,GAAD,CACE8C,KAAK,QACLC,IAAI,IACJC,IAAI,MACJC,SAAU,SAACC,GACThC,EAAYiC,OAASC,OAAOF,EAAEG,cAAcC,OAAS,aAM/D,gBAAC3D,GAAD,WACE,eAACU,GAAD,UAAeI,GAAae,KAC5B,eAACtB,GAAD,CAAaE,SAAUwB,EAAiBtC,QA/CiB,SAACiE,GAChEnB,QAAQC,IAAInB,EAAYoB,WAAYpB,EAAYqB,cAChDgB,EAAMC,iBACN,IAAMC,EAASF,EAAMF,cAAcK,wBAE7BC,GADIJ,EAAMK,QAAUH,EAAOI,OACRJ,EAAOK,MAAQL,EAAOI,MAC/ChC,EAAmB8B,EAAcjC,GACjCR,EAAYM,YAAcmC,EAAcjC,KAyClC,eAACrB,GAAD,UAAeI,GAAaiB,WAGhC,eAAC,GAAD,CACEpC,QAAS,WACP+B,GAAaD,IAFjB,SAKE,eAAC,GAAD,CACEtD,IAAG,UAAKC,sBAAL,kBACAqD,EAA4B,aAAjB,eADX,gBCjRPnE,GAAkBF,IAAOC,IAAV,oJAGEhB,EACCC,EAAOE,gBAAgB,IAKzC4H,GAAahH,IAAOC,IAAV,8NAMMf,EAAOE,gBAAgB,GACtBH,EACCC,EAAOE,gBAAgB,IAIzC6H,GAAQjH,IAAOC,IAAV,qKAKYhB,GAyBRiI,OApBf,WAAgB,IAAD,EACuB/E,qBADvB,mBACNgF,EADM,KACMjF,EADN,KAEb,OACE,gBAAC8E,GAAD,WACE,gBAAC,GAAD,WACE,eAAC,GAAD,IACA,eAACC,GAAD,UACGxE,GAAK2E,KAAI,SAACC,GAAD,OACR,wBAAC,GAAD,sDACWA,GADX,IACiBnF,mBADjB,IAEEoF,IAAKD,EAAKxF,uBAKjBsF,GAAc,eAAC,GAAD,CAAQlD,QAASkD,QClDtCI,IAASC,OACP,eAAC,IAAMC,WAAP,UACE,eAAC,GAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.9e851e85.chunk.js","sourcesContent":["export const breakpoints = {\r\n  minDesktopOrLaptop: \"1023px\",\r\n  minBigScreen: \"1921px\",\r\n  maxTablet: \"1025px\",\r\n  maxMobile: \"481px\",\r\n  maxTabletOrMobile: \"1225px\",\r\n};\r\n\r\nconst config = {\r\n  darkMode: false,\r\n  backgroundColor: [\"#FFFFFF\", \"#121212\"],\r\n};\r\n\r\nexport default config;\r\n","import { useMediaQuery } from 'react-responsive';\r\n\r\nconst useBreakpoints = () => {\r\n    const isDesktopOrLaptop = useMediaQuery({\r\n        query: '(min-width: 1024px)'\r\n    })\r\n    const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' })\r\n    const isTabletOrMobile = useMediaQuery({\r\n        query: '(max-width: 1024px)'\r\n    })\r\n    const isMobile = useMediaQuery({\r\n        query: '(max-width: 480px)'\r\n    })\r\n    const isTablet = useMediaQuery({\r\n        query: '(max-width: 1024px) and (min-width: 480px)'\r\n    })\r\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\r\n    const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' })\r\n\r\n    return {\r\n        isDesktopOrLaptop,\r\n        isBigScreen,\r\n        isTabletOrMobile,\r\n        isTablet,\r\n        isPortrait,\r\n        isRetina,\r\n        isMobile\r\n    };\r\n};\r\n\r\nexport default useBreakpoints;","import { breakpoints } from \"constants/index\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useBreakpoints from \"hooks/useBreakpoints\";\r\n\r\nconst NameDiv = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: opacity 0.4s linear;\r\n  opacity: 0;\r\n`;\r\n\r\nconst StyledContainer = styled.header`\r\n  gap: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  color: white;\r\n  margin-bottom: 1.5rem;\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin-top: 3rem;\r\n  }\r\n\r\n  &:hover ${NameDiv} {\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst PortraitContainer = styled.div`\r\n  width: 33.3333%;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledPortrait = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  opacity: 70%;\r\n`;\r\n\r\nconst StyledTextDiv = styled.section`\r\n  text-align: justify;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  transition: all 0.5s linear;\r\n  &:hover {\r\n    opacity: 0;\r\n    transition-delay: 0s;\r\n  }\r\n`;\r\n\r\nconst StyledHeader = styled.p`\r\n  font-family: \"BenchNine\", sans-serif;\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 2rem;\r\n  letter-spacing: 0.8rem;\r\n  padding-left: 0.8rem;\r\n  color: #121212;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 4rem;\r\n    letter-spacing: 1.4rem;\r\n    padding-left: 1.4rem;\r\n    line-height: 60px;\r\n    position: absolute;\r\n    top: 55%;\r\n    color: white;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 8rem;\r\n    line-height: 110px;\r\n  }\r\n`;\r\n\r\nconst StyledText = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-size: 0.65rem;\r\n  margin: 0;\r\n  margin-top: 0.2rem;\r\n  color: #121212;\r\n\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1.75rem;\r\n    position: absolute;\r\n    top: calc(55% + 60px);\r\n    color: white;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 2.75rem;\r\n    top: calc(55% + 110px);\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.p`\r\n  font-family: \"Roboto Slab\";\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  word-spacing: 300px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst StyledImageContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  background: rgba(13, 13, 13, 0.8);\r\n`;\r\n\r\nconst Banner = () => {\r\n  const { isDesktopOrLaptop, isMobile, isTablet } = useBreakpoints();\r\n  return (\r\n    <StyledContainer>\r\n      {(isDesktopOrLaptop || isTablet) && (\r\n        <StyledTextDiv>\r\n          <StyledHeader>YHARDIKNOW</StyledHeader>\r\n          <StyledText>FOR THE HOMIES, BY THE HOMIES</StyledText>\r\n        </StyledTextDiv>\r\n      )}\r\n      {isMobile && <StyledHeader>YHARDIKNOW</StyledHeader>}\r\n      <StyledImageContainer>\r\n        <PortraitContainer>\r\n          <StyledPortrait\r\n            src={`${process.env.PUBLIC_URL}/images/jameson_cropped.jpg`}\r\n          />\r\n          <NameDiv>\r\n            <StyledName>Jameson \"Goggles\" Nguyen</StyledName>\r\n          </NameDiv>\r\n        </PortraitContainer>\r\n        <PortraitContainer>\r\n          <StyledPortrait\r\n            src={`${process.env.PUBLIC_URL}/images/tuna_cropped.jpg`}\r\n          />\r\n          <NameDiv>\r\n            <StyledName>Tunahan \"Toonz\" Sakar</StyledName>\r\n          </NameDiv>\r\n        </PortraitContainer>\r\n        <PortraitContainer>\r\n          <StyledPortrait\r\n            src={`${process.env.PUBLIC_URL}/images/ridwan_cropped.jpg`}\r\n          />\r\n          <NameDiv>\r\n            <StyledName>Ridwan \"R1\" Howlader</StyledName>\r\n          </NameDiv>\r\n        </PortraitContainer>\r\n      </StyledImageContainer>\r\n      {isMobile && <StyledText>FOR THE HOMIES, BY THE HOMIES</StyledText>}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { breakpoints } from \"constants/index\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Episode } from \"types\";\r\n\r\n/* Play button */\r\n\r\nconst CoverDiv = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100px;\r\n  height: 100%;\r\n  background-color: #5e8979;\r\n  cursor: pointer;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 150px;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst PlayIcon = styled.img`\r\n  width: 64px;\r\n  height: 64px;\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    opacity: 0;\r\n    transition: opacity 0.25s linear;\r\n  }\r\n`;\r\n\r\nconst StyledEpisodeImage = styled.img`\r\n  height: 96px;\r\n  width: 96px;\r\n  transition: opacity 0.25s linear;\r\n  opacity: 0.15;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    height: 146px;\r\n    width: 146px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #afafaf;\r\n  height: auto;\r\n  max-height: 100px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    max-height: 150px;\r\n    border: 1px solid #afafaf;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    &:hover ${StyledEpisodeImage} {\r\n      opacity: 0.1;\r\n    }\r\n    &:hover ${PlayIcon} {\r\n      opacity: 1;\r\n    }\r\n    &:hover ${CoverDiv} {\r\n      background-color: #5e8979;\r\n    }\r\n  }\r\n\r\n  &.over {\r\n    max-height: 300%;\r\n    height: auto;\r\n    overflow: visible;\r\n  }\r\n`;\r\n\r\nconst PlayDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n/* Right side of card */\r\nconst InfoDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 6px 6px 6px 6px;\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n  background-color: white;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    padding: 10px 10px 10px 10px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 0;\r\n  margin-top: 0.15rem;\r\n  font-family: Roboto;\r\n  font-size: 0.75rem;\r\n  height: auto;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    margin-top: 0.25rem;\r\n    font-size: 0.75rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin-top: 0.35rem;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Date = styled.p`\r\n  margin: 0;\r\n  font-family: \"Roboto Slab\";\r\n  font-size: 0.4rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 0.65rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Roboto Slab\";\r\n  margin: 0;\r\n  font-size: 0.6rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst ExpandButton = styled.img`\r\n  margin: 0.5rem;\r\n  width: 10px;\r\n  height: 10px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    margin: 1rem;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin: 1rem;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst ChevronDiv = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: end;\r\n  width: 200px;\r\n`;\r\n\r\ninterface EpisodeCardProps extends Episode {\r\n  setSelectedEp: (ep: Episode) => void;\r\n}\r\n\r\nconst EpisodeCard: React.FC<EpisodeCardProps> = ({\r\n  episodeName,\r\n  description,\r\n  imageUrl,\r\n  audioUrl,\r\n  date,\r\n  setSelectedEp,\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n  return (\r\n    <Card className={isExpanded ? \"over\" : \"\"}>\r\n      <CoverDiv\r\n        onClick={() => {\r\n          setSelectedEp({ episodeName, description, imageUrl, audioUrl, date });\r\n        }}\r\n      >\r\n        <StyledEpisodeImage\r\n          src={`${process.env.PUBLIC_URL}/images/episodes/${imageUrl}`}\r\n        />\r\n        <PlayDiv>\r\n          <PlayIcon\r\n            src={`${process.env.PUBLIC_URL}/icons/play-button.svg`}\r\n            alt=\"play\"\r\n          />\r\n        </PlayDiv>\r\n      </CoverDiv>\r\n\r\n      <InfoDiv>\r\n        <Title>{episodeName}</Title>\r\n        <Date>{date}</Date>\r\n        <Description>{description}</Description>\r\n      </InfoDiv>\r\n      <ChevronDiv\r\n        onClick={() => {\r\n          setIsExpanded(!isExpanded);\r\n        }}\r\n      >\r\n        <ExpandButton\r\n          src={`${process.env.PUBLIC_URL}/icons/${\r\n            !isExpanded ? \"down-chevron\" : \"up-chevron\"\r\n          }.svg`}\r\n        />\r\n      </ChevronDiv>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","import { Episode } from \"types\";\r\n\r\nconst data: Array<Episode> = [\r\n  {\r\n    // https://docs.google.com/uc?export=download&id=1-YGtf9crGBypUoB-tFkQHLjlorCukp2v\r\n    audioUrl: `https://docs.google.com/uc?export=download&id=1-YGtf9crGBypUoB-tFkQHLjlorCukp2v`,\r\n    description:\r\n      \"Your boys Dj Toonz, R1 and Goggles take on the world with first ever episode of the Yhardiknow Podcast. Get to know the homies and hopefully there's going to be many more to come. \",\r\n    episodeName: \"Pilot Episode\",\r\n    date: \"Sunday, January 5th 2020\",\r\n    imageUrl: \"ep_p.png\",\r\n  },\r\n  {\r\n    // https://docs.google.com/uc?export=download&id=18UqauY7Q5hiZM-3NDRNHnY-vm7bRa8eb\r\n    audioUrl: `https://docs.google.com/uc?export=download&id=18UqauY7Q5hiZM-3NDRNHnY-vm7bRa8eb`,\r\n    description:\r\n      \"And we're back! Episode 1 kicks off with new segments including PORC (Pop Off On Recent Content) and the Ep. to Ep. challenges. Listen in as we reminisce on our youths when we were yutes.\",\r\n    episodeName: \"Throwback Thursdays\",\r\n    date: \"Thursday, January 23 2020\",\r\n    imageUrl: \"ep_1.png\",\r\n  },\r\n  {\r\n    // https://docs.google.com/uc?export=download&id=1EcWo9ChLNGYLdutharHBhXpBQ7gaHk2q\r\n    audioUrl:\r\n      \"https://docs.google.com/uc?export=download&id=1EcWo9ChLNGYLdutharHBhXpBQ7gaHk2q\",\r\n    description:\r\n      ' *Disclaimer: the PORC segment on COVID-19 was included and discussed much before any of the quarantining measures were enacted. Apologies for discussion points that may sound outdated or irrelevant. We were told not to make an episode on style. We did it anyways. This episode features some tasty PORC, discussions on how much style we did not have and the much awaited \"H\" ',\r\n    episodeName: \"Style for Days\",\r\n    date: \"Monday, March 9 2020\",\r\n    imageUrl: \"ep_2.png\",\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Episode } from \"types\";\r\nimport { breakpoints } from \"constants/index\";\r\n\r\ninterface AudioProps {\r\n  episode: Episode;\r\n}\r\n\r\nconst PlayerContainer = styled.div`\r\n  position: sticky;\r\n  bottom: 0;\r\n  height: 100px;\r\n  width: 100%;\r\n  background-color: white;\r\n  border-top: 1px solid #121212;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: height 0.01s linear;\r\n  &.hidden {\r\n    height: 50px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    height: 120px;\r\n    &.hidden {\r\n      height: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  max-width: 1024px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: white;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ExpandButton = styled.img`\r\n  margin: 0.5rem;\r\n  width: 10px;\r\n  height: 10px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    margin: 1rem;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin: 1rem;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst ChevronDiv = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: end;\r\n  width: max(5%, 50px);\r\n`;\r\n\r\nconst Title = styled.p`\r\n  font-family: \"Roboto Slab\";\r\n  margin: 0px;\r\n  font-size: 0.6rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nconst ProgressDiv = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ControlBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst PlayerIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    width: 56px;\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst VolumeContainer = styled.div`\r\n  display: flex;\r\n  justify-content: end;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  max-width: 50%;\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst VolumeIcon = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n`;\r\n\r\nconst VolumeSlider = styled.input`\r\n  width: 50%;\r\n`;\r\n\r\nconst ProgressBar = styled.div<{ progress: number }>`\r\n  width: 80%;\r\n  height: 10px;\r\n  margin: 0px 5px 0px 5px;\r\n  border-radius: 5px;\r\n  margin-top: 3px;\r\n  background: linear-gradient(\r\n    to right,\r\n    #121212 0%,\r\n    #121212 ${(state) => state.progress}%,\r\n    grey ${(state) => state.progress}%,\r\n    grey 100%\r\n  );\r\n`;\r\n\r\nconst DurationText = styled.p`\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n  font-size: 0.5rem;\r\n  margin: 0;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\nconst fade = keyframes`\r\n  0%{\r\n    opacity: 0;\r\n  }\r\n  50%{\r\n    opacity: 1;\r\n  }\r\n  100%{\r\n    opacity: 0;\r\n  }\r\n`;\r\nconst LoadingText = styled.p`\r\n  animation: ${fade} 2s linear infinite;\r\n  font-family: \"Roboto Slab\";\r\n  margin: 0px;\r\n`;\r\n\r\nconst formatTimers = (time: number) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = Math.floor(time % 60);\r\n  return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n};\r\n\r\nconst Player: React.FC<AudioProps> = ({ episode }) => {\r\n  const [AudioObject, setAudioObject] = useState<HTMLMediaElement>(\r\n    new Audio(episode.audioUrl)\r\n  );\r\n  const [isHidden, setIsHidden] = useState<boolean>(false);\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n  const [currentTime, setCurrentTime] = useState<number>(0);\r\n  const [endTime, setEndTime] = useState<number>(0);\r\n  const [currentProgress, setCurrentProgress] = useState<number>(0);\r\n  const [canPlay, setCanPlay] = useState<boolean>(false);\r\n  const Play = () => {\r\n    setIsPlaying(!isPlaying);\r\n    if (isPlaying) {\r\n      AudioObject.pause();\r\n    } else {\r\n      AudioObject.play();\r\n    }\r\n  };\r\n  AudioObject.addEventListener(\"timeupdate\", () => {\r\n    setCurrentTime(AudioObject.currentTime);\r\n    setEndTime(AudioObject.duration);\r\n    setCurrentProgress((AudioObject.currentTime / AudioObject.duration) * 100);\r\n  });\r\n\r\n  useEffect(() => {\r\n    AudioObject.pause();\r\n    setAudioObject(new Audio(episode.audioUrl));\r\n    setCurrentTime(0);\r\n    setCurrentProgress(0);\r\n    setEndTime(0);\r\n    setIsPlaying(false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [episode]);\r\n\r\n  useEffect(() => {\r\n    console.log(AudioObject.readyState, AudioObject.networkState);\r\n    if (AudioObject.readyState > 2 || AudioObject.networkState !== 2) {\r\n      setCanPlay(true);\r\n    } else {\r\n      setCanPlay(false);\r\n    }\r\n  }, [AudioObject.readyState, AudioObject.networkState]);\r\n\r\n  const onClickProgress: React.MouseEventHandler<HTMLDivElement> = (event) => {\r\n    console.log(AudioObject.readyState, AudioObject.networkState);\r\n    event.preventDefault();\r\n    const bounds = event.currentTarget.getBoundingClientRect();\r\n    const x = event.clientX - bounds.left;\r\n    const newProgress = x / (bounds.right - bounds.left);\r\n    setCurrentProgress(newProgress * endTime);\r\n    AudioObject.currentTime = newProgress * endTime;\r\n  };\r\n\r\n  return (\r\n    <PlayerContainer className={isHidden ? \"hidden\" : \"\"}>\r\n      <StyledDiv>\r\n        {!isHidden && (\r\n          <ControlBar>\r\n            <div\r\n              style={{\r\n                display: \"flex\",\r\n                alignItems: \"center\",\r\n                gap: \"0.5rem\",\r\n                marginLeft: \"0.5rem\",\r\n              }}\r\n            >\r\n              <PlayerIcon\r\n                src={`${process.env.PUBLIC_URL}/icons/${\r\n                  isPlaying ? \"pause\" : \"play-button\"\r\n                }.svg`}\r\n                onClick={Play}\r\n              />\r\n              <Title>{episode.episodeName}</Title>\r\n            </div>\r\n            {isPlaying && !canPlay && <LoadingText>Loading Audio</LoadingText>}\r\n            <VolumeContainer>\r\n              <VolumeIcon src={`${process.env.PUBLIC_URL}/icons/volume.svg`} />\r\n              <VolumeSlider\r\n                type=\"range\"\r\n                min=\"0\"\r\n                max=\"100\"\r\n                onChange={(e) => {\r\n                  AudioObject.volume = Number(e.currentTarget.value) / 100;\r\n                }}\r\n              />\r\n            </VolumeContainer>\r\n          </ControlBar>\r\n        )}\r\n        <ProgressDiv>\r\n          <DurationText>{formatTimers(currentTime)}</DurationText>\r\n          <ProgressBar progress={currentProgress} onClick={onClickProgress} />\r\n          <DurationText>{formatTimers(endTime)}</DurationText>\r\n        </ProgressDiv>\r\n      </StyledDiv>\r\n      <ChevronDiv\r\n        onClick={() => {\r\n          setIsHidden(!isHidden);\r\n        }}\r\n      >\r\n        <ExpandButton\r\n          src={`${process.env.PUBLIC_URL}/icons/${\r\n            !isHidden ? \"down-chevron\" : \"up-chevron\"\r\n          }.svg`}\r\n        />\r\n      </ChevronDiv>\r\n    </PlayerContainer>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport config, { breakpoints } from \"constants/index\";\nimport Banner from \"components/Banner\";\nimport EpisodeCard from \"components/EpisodeCard\";\nimport data from \"constants/sampleData\";\nimport Player from \"components/Player\";\nimport { Episode } from \"types\";\n\nconst StyledContainer = styled.div`\n  color: #121212;\n  width: 100%;\n  @media (min-width: ${breakpoints.maxMobile}) {\n    background-color: ${config.backgroundColor[0]};\n    max-width: 1024px;\n  }\n`;\n\nconst StyledBody = styled.div`\n  width: 100%;\n  min-height: 100vh;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  background-color: ${config.backgroundColor[0]};\n  @media (min-width: ${breakpoints.maxMobile}) {\n    background-color: ${config.backgroundColor[0]};\n  }\n`;\n\nconst Cards = styled.div`\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  gap: 0.75rem;\n  @media (min-width: ${breakpoints.maxMobile}) {\n    gap: 0.5rem;\n  }\n`;\n\nfunction App() {\n  const [selectedEp, setSelectedEp] = useState<Episode>();\n  return (\n    <StyledBody>\n      <StyledContainer>\n        <Banner />\n        <Cards>\n          {data.map((info) => (\n            <EpisodeCard\n              {...{ ...info, setSelectedEp }}\n              key={info.episodeName}\n            />\n          ))}\n        </Cards>\n      </StyledContainer>\n      {selectedEp && <Player episode={selectedEp} />}\n    </StyledBody>\n  );\n}\n//<Player />\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'styles/index.css';\nimport App from 'components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}