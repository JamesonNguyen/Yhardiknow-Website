{"version":3,"sources":["constants/index.ts","hooks/useBreakpoints.tsx","components/Banner.tsx","components/EpisodeCard.tsx","constants/sampleData.ts","components/audioplayer/AudioControls.tsx","components/Player.tsx","components/App.tsx","index.tsx"],"names":["breakpoints","darkModeConfig","backgroundColor","textColor","headerColor","filter","lightModeConfig","useBreakpoints","isDesktopOrLaptop","useMediaQuery","query","isBigScreen","isTabletOrMobile","isMobile","isTablet","isPortrait","isRetina","NameDiv","styled","div","props","theme","StyledContainer","header","PortraitContainer","StyledPortrait","img","StyledTextDiv","section","StyledHeader","p","StyledText","StyledName","StyledImageContainer","Banner","src","process","CoverDiv","PlayIcon","StyledEpisodeImage","Card","PlayDiv","InfoDiv","Description","Date","Title","ExpandButton","ChevronDiv","EpisodeCard","episodeName","description","imageUrl","audioUrl","date","setSelectedEp","useState","isExpanded","setIsExpanded","className","onClick","alt","data","ControlBar","PlayerIcon","Spin","keyframes","LoadingIcon","VolumeContainer","VolumeIcon","VolumeSlider","input","AudioControls","episode","isPlaying","setIsPlaying","setVolume","isLoaded","style","display","alignItems","gap","marginLeft","type","min","max","onChange","e","Number","currentTarget","value","PlayerContainer","StyledDiv","ProgressDiv","ProgressBar","DurationText","formatTimers","time","minutes","Math","floor","seconds","Player","isHidden","setIsHidden","player","useRef","trackProgress","setTrackProgress","volume","duration","setDuration","setIsLoaded","useEffect","useRaf","current","seek","ref","playing","html5","onLoad","onEnd","step","StyledLabel","label","StyledBody","Cards","App","selectedEp","isDarkMode","setIsDarkMode","map","info","key","checked","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.22d659de.chunk.js","sourcesContent":["export const breakpoints = {\r\n  minDesktopOrLaptop: \"1023px\",\r\n  minBigScreen: \"1921px\",\r\n  maxTablet: \"1025px\",\r\n  maxMobile: \"481px\",\r\n  maxTabletOrMobile: \"1225px\",\r\n};\r\n\r\nconst darkModeConfig = {\r\n  backgroundColor: \"#121212\",\r\n  textColor: \"#FFFFFF\",\r\n  headerColor: \"#FFFFFF\",\r\n  filter: \"invert(100)\",\r\n};\r\n\r\nconst lightModeConfig = {\r\n  backgroundColor: \"#FFFFFF\",\r\n  textColor: \"#121212\",\r\n  headerColor: \"#FFFFFF\",\r\n  filter: \"\",\r\n};\r\n\r\nexport { darkModeConfig, lightModeConfig };\r\n","import { useMediaQuery } from 'react-responsive';\r\n\r\nconst useBreakpoints = () => {\r\n    const isDesktopOrLaptop = useMediaQuery({\r\n        query: '(min-width: 1024px)'\r\n    })\r\n    const isBigScreen = useMediaQuery({ query: '(min-width: 1824px)' })\r\n    const isTabletOrMobile = useMediaQuery({\r\n        query: '(max-width: 1024px)'\r\n    })\r\n    const isMobile = useMediaQuery({\r\n        query: '(max-width: 480px)'\r\n    })\r\n    const isTablet = useMediaQuery({\r\n        query: '(max-width: 1024px) and (min-width: 480px)'\r\n    })\r\n    const isPortrait = useMediaQuery({ query: '(orientation: portrait)' })\r\n    const isRetina = useMediaQuery({ query: '(min-resolution: 2dppx)' })\r\n\r\n    return {\r\n        isDesktopOrLaptop,\r\n        isBigScreen,\r\n        isTabletOrMobile,\r\n        isTablet,\r\n        isPortrait,\r\n        isRetina,\r\n        isMobile\r\n    };\r\n};\r\n\r\nexport default useBreakpoints;","import { breakpoints } from \"constants/index\";\r\nimport React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport useBreakpoints from \"hooks/useBreakpoints\";\r\n\r\nconst NameDiv = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: opacity 0.4s linear;\r\n  opacity: 0;\r\n  color: ${(props) => props.theme.headerColor};\r\n`;\r\n\r\nconst StyledContainer = styled.header`\r\n  gap: 0;\r\n  width: 100%;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  margin-bottom: 1.5rem;\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin-top: 3rem;\r\n  }\r\n  &:hover ${NameDiv} {\r\n    opacity: 1;\r\n  }\r\n`;\r\nconst PortraitContainer = styled.div`\r\n  width: 33.3333%;\r\n  position: relative;\r\n`;\r\n\r\nconst StyledPortrait = styled.img`\r\n  width: 100%;\r\n  height: 100%;\r\n  object-fit: cover;\r\n  opacity: 70%;\r\n`;\r\n\r\nconst StyledTextDiv = styled.section`\r\n  text-align: justify;\r\n  position: absolute;\r\n  width: 100%;\r\n  height: 100%;\r\n  z-index: 3;\r\n  display: flex;\r\n  justify-content: center;\r\n  transition: all 0.5s linear;\r\n  &:hover {\r\n    opacity: 0;\r\n    transition-delay: 0s;\r\n  }\r\n`;\r\n\r\nconst StyledHeader = styled.p`\r\n  font-family: \"BenchNine\", sans-serif;\r\n  text-align: center;\r\n  margin: 0;\r\n  font-size: 2rem;\r\n  letter-spacing: 0.8rem;\r\n  padding-left: 0.8rem;\r\n  color: ${(props) => props.theme.textColor};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 4rem;\r\n    letter-spacing: 1.4rem;\r\n    padding-left: 1.4rem;\r\n    line-height: 60px;\r\n    position: absolute;\r\n    top: 55%;\r\n    color: ${(props) => props.theme.headerColor};\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 8rem;\r\n    line-height: 110px;\r\n  }\r\n`;\r\n\r\nconst StyledText = styled.p`\r\n  font-family: \"Open Sans\", sans-serif;\r\n  font-size: 0.65rem;\r\n  margin: 0;\r\n  margin-top: 0.2rem;\r\n  color: ${(props) => props.theme.textColor};\r\n\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1.75rem;\r\n    position: absolute;\r\n    top: calc(55% + 60px);\r\n    color: ${(props) => props.theme.headerColor};\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 2.75rem;\r\n    top: calc(55% + 110px);\r\n  }\r\n`;\r\n\r\nconst StyledName = styled.p`\r\n  font-family: \"Roboto Slab\";\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  word-spacing: 300px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 3rem;\r\n  }\r\n`;\r\n\r\nconst StyledImageContainer = styled.div`\r\n  display: flex;\r\n  width: 100%;\r\n  background: rgba(13, 13, 13, 0.8);\r\n`;\r\n\r\nconst Banner = () => {\r\n  const { isDesktopOrLaptop, isMobile, isTablet } = useBreakpoints();\r\n  return (\r\n    <StyledContainer>\r\n      {(isDesktopOrLaptop || isTablet) && (\r\n        <StyledTextDiv>\r\n          <StyledHeader>YHARDIKNOW</StyledHeader>\r\n          <StyledText>FOR THE HOMIES, BY THE HOMIES</StyledText>\r\n        </StyledTextDiv>\r\n      )}\r\n      {isMobile && <StyledHeader>YHARDIKNOW</StyledHeader>}\r\n      <StyledImageContainer>\r\n        <PortraitContainer>\r\n          <StyledPortrait\r\n            src={`${process.env.PUBLIC_URL}/images/jameson_cropped.jpg`}\r\n          />\r\n          <NameDiv>\r\n            <StyledName>Jameson \"Goggles\" Nguyen</StyledName>\r\n          </NameDiv>\r\n        </PortraitContainer>\r\n        <PortraitContainer>\r\n          <StyledPortrait\r\n            src={`${process.env.PUBLIC_URL}/images/tuna_cropped.jpg`}\r\n          />\r\n          <NameDiv>\r\n            <StyledName>Tunahan \"Toonz\" Sakar</StyledName>\r\n          </NameDiv>\r\n        </PortraitContainer>\r\n        <PortraitContainer>\r\n          <StyledPortrait\r\n            src={`${process.env.PUBLIC_URL}/images/ridwan_cropped.jpg`}\r\n          />\r\n          <NameDiv>\r\n            <StyledName>Ridwan \"R1\" Howlader</StyledName>\r\n          </NameDiv>\r\n        </PortraitContainer>\r\n      </StyledImageContainer>\r\n      {isMobile && <StyledText>FOR THE HOMIES, BY THE HOMIES</StyledText>}\r\n    </StyledContainer>\r\n  );\r\n};\r\n\r\nexport default Banner;\r\n","import { breakpoints } from \"constants/index\";\r\nimport React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Episode } from \"types\";\r\n\r\n/* Play button */\r\n\r\nconst CoverDiv = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  width: 100px;\r\n  height: 100%;\r\n  background-color: #5e8979;\r\n  cursor: pointer;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 150px;\r\n    height: 100%;\r\n  }\r\n`;\r\n\r\nconst PlayIcon = styled.img`\r\n  width: 64px;\r\n  height: 64px;\r\n  filter: ${(props) => props.theme.filter};\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    opacity: 0;\r\n    transition: opacity 0.25s linear;\r\n  }\r\n`;\r\n\r\nconst StyledEpisodeImage = styled.img`\r\n  height: 96px;\r\n  width: 96px;\r\n  transition: opacity 0.25s linear;\r\n  opacity: 0.15;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    height: 146px;\r\n    width: 146px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    opacity: 1;\r\n  }\r\n`;\r\n\r\nconst Card = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  width: 100%;\r\n  box-sizing: border-box;\r\n  border: 1px solid #afafaf;\r\n  height: auto;\r\n  max-height: 100px;\r\n  background-color: ${(props) => props.theme.backgroundColor};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    max-height: 150px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    &:hover ${StyledEpisodeImage} {\r\n      opacity: 0.1;\r\n    }\r\n    &:hover ${PlayIcon} {\r\n      opacity: 1;\r\n    }\r\n    &:hover ${CoverDiv} {\r\n      background-color: #5e8979;\r\n    }\r\n  }\r\n\r\n  &.over {\r\n    max-height: 300%;\r\n    height: auto;\r\n    overflow: visible;\r\n  }\r\n`;\r\n\r\nconst PlayDiv = styled.div`\r\n  height: 100%;\r\n  width: 100%;\r\n  position: absolute;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\n/* Right side of card */\r\nconst InfoDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  padding: 6px 6px 6px 6px;\r\n  max-height: 100%;\r\n  overflow: hidden;\r\n  background-color: ${(props) => props.theme.backgroundColor};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    padding: 10px 10px 10px 10px;\r\n  }\r\n`;\r\n\r\nconst Description = styled.p`\r\n  margin: 0;\r\n  margin-top: 0.15rem;\r\n  font-family: Roboto;\r\n  font-size: 0.75rem;\r\n  height: auto;\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    margin-top: 0.25rem;\r\n    font-size: 0.75rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin-top: 0.35rem;\r\n    font-size: 1rem;\r\n  }\r\n`;\r\n\r\nconst Date = styled.p`\r\n  margin: 0;\r\n  font-family: \"Roboto Slab\";\r\n  font-size: 0.4rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 0.65rem;\r\n  }\r\n\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 0.75rem;\r\n  }\r\n`;\r\n\r\nconst Title = styled.p`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-family: \"Roboto Slab\";\r\n  margin: 0;\r\n  font-size: 0.6rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst ExpandButton = styled.img`\r\n  margin: 0.5rem;\r\n  width: 10px;\r\n  height: 10px;\r\n  filter: ${(props) => props.theme.filter};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    margin: 1rem;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin: 1rem;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst ChevronDiv = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: end;\r\n  width: 200px;\r\n`;\r\n\r\ninterface EpisodeCardProps extends Episode {\r\n  setSelectedEp: (ep: Episode) => void;\r\n}\r\n\r\nconst EpisodeCard: React.FC<EpisodeCardProps> = ({\r\n  episodeName,\r\n  description,\r\n  imageUrl,\r\n  audioUrl,\r\n  date,\r\n  setSelectedEp,\r\n}) => {\r\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\r\n  return (\r\n    <Card className={isExpanded ? \"over\" : \"\"}>\r\n      <CoverDiv\r\n        onClick={() => {\r\n          setSelectedEp({ episodeName, description, imageUrl, audioUrl, date });\r\n        }}\r\n      >\r\n        <StyledEpisodeImage\r\n          src={`${process.env.PUBLIC_URL}/images/episodes/${imageUrl}`}\r\n        />\r\n        <PlayDiv>\r\n          <PlayIcon\r\n            src={`${process.env.PUBLIC_URL}/icons/play-button.svg`}\r\n            alt=\"play\"\r\n          />\r\n        </PlayDiv>\r\n      </CoverDiv>\r\n\r\n      <InfoDiv>\r\n        <Title>{episodeName}</Title>\r\n        <Date>{date}</Date>\r\n        <Description>{description}</Description>\r\n      </InfoDiv>\r\n      <ChevronDiv\r\n        onClick={() => {\r\n          setIsExpanded(!isExpanded);\r\n        }}\r\n      >\r\n        <ExpandButton\r\n          src={`${process.env.PUBLIC_URL}/icons/${\r\n            !isExpanded ? \"down-chevron\" : \"up-chevron\"\r\n          }.svg`}\r\n        />\r\n      </ChevronDiv>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default EpisodeCard;\r\n","import { Episode } from \"types\";\r\n\r\nconst data: Array<Episode> = [\r\n  {\r\n    audioUrl: `https://docs.google.com/uc?export=download&id=1-YGtf9crGBypUoB-tFkQHLjlorCukp2v`,\r\n    //audioUrl: `https://docs.google.com/uc?export=download&id=0B10YzQnkmnnJajBRYVNaaGhrSHM`,\r\n    description:\r\n      \"Your boys Dj Toonz, R1 and Goggles take on the world with first ever episode of the Yhardiknow Podcast. Get to know the homies and hopefully there's going to be many more to come. \",\r\n    episodeName: \"Pilot Episode\",\r\n    date: \"Sunday, January 5th 2020\",\r\n    imageUrl: \"ep_p.png\",\r\n  },\r\n  {\r\n    audioUrl: `https://docs.google.com/uc?export=download&id=18UqauY7Q5hiZM-3NDRNHnY-vm7bRa8eb`,\r\n    //audioUrl: `https://docs.google.com/uc?export=download&id=0B10YzQnkmnnJRWw4elNXaUJWek0`,\r\n    description:\r\n      \"And we're back! Episode 1 kicks off with new segments including PORC (Pop Off On Recent Content) and the Ep. to Ep. challenges. Listen in as we reminisce on our youths when we were yutes.\",\r\n    episodeName: \"Throwback Thursdays\",\r\n    date: \"Thursday, January 23 2020\",\r\n    imageUrl: \"ep_1.png\",\r\n  },\r\n  {\r\n    audioUrl: `https://docs.google.com/uc?export=download&id=1EcWo9ChLNGYLdutharHBhXpBQ7gaHk2q`,\r\n    //audioUrl:\"https://docs.google.com/uc?export=download&id=0B10YzQnkmnnJOUJoaS1HMnlhSmc\",\r\n    description:\r\n      ' *Disclaimer: the PORC segment on COVID-19 was included and discussed much before any of the quarantining measures were enacted. Apologies for discussion points that may sound outdated or irrelevant. We were told not to make an episode on style. We did it anyways. This episode features some tasty PORC, discussions on how much style we did not have and the much awaited \"H\" ',\r\n    episodeName: \"Style for Days\",\r\n    date: \"Monday, March 9 2020\",\r\n    imageUrl: \"ep_2.png\",\r\n  },\r\n];\r\n\r\nexport default data;\r\n","import { breakpoints } from \"constants/index\";\r\nimport React from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport { Episode } from \"types\";\r\ninterface AudioControlProps {\r\n  episode: Episode;\r\n  isPlaying: boolean;\r\n  setIsPlaying: (value: boolean) => void;\r\n  setVolume: (value: number) => void;\r\n  isLoaded: boolean;\r\n}\r\n\r\nconst Title = styled.p`\r\n  font-family: \"Roboto Slab\";\r\n  margin: 0px;\r\n  font-size: 0.6rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst ControlBar = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  width: 100%;\r\n`;\r\n\r\nconst PlayerIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  filter: ${(props) => props.theme.filter};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    width: 56px;\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst Spin = keyframes`\r\n  from{\r\n    transform: rotate(0deg);\r\n  }\r\n  to{\r\n    transform: rotate(360deg);\r\n  }\r\n`;\r\n\r\nconst LoadingIcon = styled.img`\r\n  width: 32px;\r\n  height: 32px;\r\n  animation: ${Spin} 2s linear infinite;\r\n  filter: ${(props) => props.theme.filter};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 48px;\r\n    height: 48px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    width: 56px;\r\n    height: 56px;\r\n  }\r\n`;\r\n\r\nconst VolumeContainer = styled.div`\r\n  display: flex;\r\n  justify-content: right;\r\n  align-items: center;\r\n  gap: 0.5rem;\r\n  max-width: 50%;\r\n  margin-right: 0.5rem;\r\n`;\r\n\r\nconst VolumeIcon = styled.img`\r\n  width: 16px;\r\n  height: 16px;\r\n  filter: ${(props) => props.theme.filter};\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    width: 32px;\r\n    height: 32px;\r\n  }\r\n`;\r\n\r\nconst VolumeSlider = styled.input`\r\n  width: 50%;\r\n`;\r\n\r\nconst AudioControls: React.FC<AudioControlProps> = ({\r\n  episode,\r\n  isPlaying,\r\n  setIsPlaying,\r\n  setVolume,\r\n  isLoaded,\r\n}) => {\r\n  return (\r\n    <ControlBar>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"center\",\r\n          gap: \"0.5rem\",\r\n          marginLeft: \"0.5rem\",\r\n        }}\r\n      >\r\n        {isPlaying && !isLoaded ? (\r\n          <LoadingIcon src={`${process.env.PUBLIC_URL}/icons/loading.svg`} />\r\n        ) : (\r\n          <PlayerIcon\r\n            src={`${process.env.PUBLIC_URL}/icons/${\r\n              isPlaying ? \"pause\" : \"play-button\"\r\n            }.svg`}\r\n            onClick={() => {\r\n              setIsPlaying(!isPlaying);\r\n            }}\r\n          />\r\n        )}\r\n        <Title>{episode.episodeName}</Title>\r\n      </div>\r\n      <VolumeContainer>\r\n        <VolumeIcon src={`${process.env.PUBLIC_URL}/icons/volume.svg`} />\r\n        <VolumeSlider\r\n          type=\"range\"\r\n          min=\"0\"\r\n          max=\"100\"\r\n          onChange={(e) => {\r\n            setVolume(Number(e.currentTarget.value));\r\n          }}\r\n        />\r\n      </VolumeContainer>\r\n    </ControlBar>\r\n  );\r\n};\r\n\r\nexport default AudioControls;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Episode } from \"types\";\r\nimport { breakpoints } from \"constants/index\";\r\nimport ReactHowler from \"react-howler\";\r\nimport useRaf from \"@rooks/use-raf\";\r\nimport AudioControls from \"components/audioplayer/AudioControls\";\r\ninterface AudioProps {\r\n  episode: Episode;\r\n}\r\n\r\nconst PlayerContainer = styled.div`\r\n  position: sticky;\r\n  bottom: 0;\r\n  height: 100px;\r\n  width: 100%;\r\n  border-top: 1px solid ${(props) => props.theme.textColor};\r\n  color: ${(props) => props.theme.textColor};\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  transition: height 0.01s linear;\r\n  &.hidden {\r\n    height: 50px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    height: 120px;\r\n    &.hidden {\r\n      height: 60px;\r\n    }\r\n  }\r\n`;\r\n\r\nconst StyledDiv = styled.div`\r\n  max-width: 1024px;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-color: ${(props) => props.theme.backgroundColor};\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ExpandButton = styled.img`\r\n  margin: 0.5rem;\r\n  width: 10px;\r\n  height: 10px;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    margin: 1rem;\r\n    width: 16px;\r\n    height: 16px;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    margin: 1rem;\r\n    width: 24px;\r\n    height: 24px;\r\n  }\r\n`;\r\n\r\nconst ChevronDiv = styled.div`\r\n  cursor: pointer;\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n  display: flex;\r\n  justify-content: end;\r\n  width: max(5%, 50px);\r\n  filter: ${(props) => props.theme.filter};\r\n`;\r\n\r\nconst ProgressDiv = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst ProgressBar = styled.input`\r\n  width: 80%;\r\n  height: 10px;\r\n  margin: 0px 5px 0px 5px;\r\n  border-radius: 5px;\r\n  margin-top: 3px;\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    width: 88%;\r\n  }\r\n`;\r\n\r\nconst DurationText = styled.p`\r\n  display: table-cell;\r\n  vertical-align: middle;\r\n  font-size: 0.5rem;\r\n  margin: 0;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    font-size: 1rem;\r\n  }\r\n  @media (min-width: ${breakpoints.maxTablet}) {\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n\r\nconst formatTimers = (time: number) => {\r\n  const minutes = Math.floor(time / 60);\r\n  const seconds = Math.floor(time % 60);\r\n  return `${minutes}:${seconds < 10 ? \"0\" : \"\"}${seconds}`;\r\n};\r\n\r\nconst Player: React.FC<AudioProps> = ({ episode }) => {\r\n  const [isHidden, setIsHidden] = useState<boolean>(false);\r\n  const [isPlaying, setIsPlaying] = useState<boolean>(false);\r\n  const player = useRef<ReactHowler>(null);\r\n  const [trackProgress, setTrackProgress] = useState<number>(0);\r\n  const [volume, setVolume] = useState<number>(50);\r\n  const [duration, setDuration] = useState<number>(0);\r\n  const [isLoaded, setIsLoaded] = useState<boolean>(false);\r\n\r\n  const onLoad = () => {\r\n    setIsLoaded(true);\r\n    //setTrackProgress(player.current!.seek());\r\n    setDuration(player.current!.duration());\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsPlaying(false);\r\n    setIsLoaded(false);\r\n    setTrackProgress(0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [episode]);\r\n\r\n  const onEnd = () => {\r\n    setIsPlaying(false);\r\n  };\r\n  useRaf(() => {\r\n    setTrackProgress(player.current!.seek());\r\n  }, isPlaying && isLoaded);\r\n\r\n  return (\r\n    <PlayerContainer className={isHidden ? \"hidden\" : \"\"}>\r\n      <ReactHowler\r\n        src={episode.audioUrl}\r\n        ref={player}\r\n        playing={isPlaying}\r\n        html5={true}\r\n        volume={volume / 100}\r\n        onLoad={onLoad}\r\n        onEnd={onEnd}\r\n      />\r\n      <StyledDiv>\r\n        {!isHidden && (\r\n          <AudioControls\r\n            {...{\r\n              setVolume,\r\n              episode,\r\n              isPlaying,\r\n              setIsPlaying,\r\n              isLoaded,\r\n            }}\r\n          />\r\n        )}\r\n        <ProgressDiv>\r\n          <DurationText>{formatTimers(trackProgress)}</DurationText>\r\n          <ProgressBar\r\n            type=\"range\"\r\n            value={trackProgress}\r\n            step=\"1\"\r\n            min=\"0\"\r\n            max={duration}\r\n            onChange={(e) => {\r\n              player.current?.seek(Number(e.currentTarget.value));\r\n            }}\r\n          />\r\n          <DurationText>{formatTimers(duration)}</DurationText>\r\n        </ProgressDiv>\r\n      </StyledDiv>\r\n      <ChevronDiv\r\n        onClick={() => {\r\n          setIsHidden(!isHidden);\r\n        }}\r\n      >\r\n        <ExpandButton\r\n          src={`${process.env.PUBLIC_URL}/icons/${\r\n            !isHidden ? \"down-chevron\" : \"up-chevron\"\r\n          }.svg`}\r\n        />\r\n      </ChevronDiv>\r\n    </PlayerContainer>\r\n  );\r\n};\r\n\r\nexport default Player;\r\n","import React, { useState } from \"react\";\r\nimport styled, { ThemeProvider } from \"styled-components\";\r\nimport { darkModeConfig, breakpoints, lightModeConfig } from \"constants/index\";\r\nimport Banner from \"components/Banner\";\r\nimport EpisodeCard from \"components/EpisodeCard\";\r\nimport data from \"constants/sampleData\";\r\nimport Player from \"components/Player\";\r\nimport { Episode } from \"types\";\r\nimport Switch from \"react-switch\";\r\n\r\nconst StyledContainer = styled.div`\r\n  color: ${(props) => props.theme.textColor};\r\n  width: 100%;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    background-color: ${(props) => props.theme.backgroundColor};\r\n    max-width: 1024px;\r\n  }\r\n`;\r\n\r\nconst StyledLabel = styled.label`\r\n  margin-top: 2rem;\r\n  display: flex;\r\n  gap: 0.5rem;\r\n  align-items: center;\r\n  font-family: roboto slab;\r\n`;\r\n\r\nconst StyledBody = styled.div`\r\n  width: 100%;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  background-color: ${(props) => props.theme.backgroundColor};\r\n`;\r\n\r\nconst Cards = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  flex-direction: column;\r\n  gap: 0.75rem;\r\n  @media (min-width: ${breakpoints.maxMobile}) {\r\n    gap: 0.5rem;\r\n  }\r\n`;\r\n\r\nfunction App() {\r\n  const [selectedEp, setSelectedEp] = useState<Episode>();\r\n  const [isDarkMode, setIsDarkMode] = useState<boolean>(false);\r\n  return (\r\n    <ThemeProvider theme={isDarkMode ? darkModeConfig : lightModeConfig}>\r\n      <StyledBody>\r\n        <StyledContainer>\r\n          <Banner />\r\n          <Cards>\r\n            {data.map((info) => (\r\n              <EpisodeCard\r\n                {...{ ...info, setSelectedEp }}\r\n                key={info.episodeName}\r\n              />\r\n            ))}\r\n          </Cards>\r\n          <StyledLabel>\r\n            <span>Dark Mode</span>\r\n            <Switch\r\n              checked={isDarkMode}\r\n              onChange={() => {\r\n                setIsDarkMode(!isDarkMode);\r\n              }}\r\n            />\r\n          </StyledLabel>\r\n        </StyledContainer>\r\n        {selectedEp && <Player episode={selectedEp} />}\r\n      </StyledBody>\r\n    </ThemeProvider>\r\n  );\r\n}\r\n//<Player />\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'styles/index.css';\r\nimport App from 'components/App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}